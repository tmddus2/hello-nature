/// <reference types="react" />
import { Theme } from '../types';
import { TimelineHoursProps } from './TimelineHours';
import { Event, PackedEvent } from './EventBlock';
export interface TimelineProps {
    /**
     * The date of this timeline instance in ISO format (e.g. 2011-10-25)
     */
    date?: string;
    /**
     * List of events to display in this timeline
     */
    events: Event[];
    /**
     * The timeline day start time
     */
    start?: number;
    /**
     * The timeline day end time
     */
    end?: number;
    /**
     * @deprecated
     * Use onEventPress instead
     */
    eventTapped?: (event: Event) => void;
    /**
     * Handle event press
     */
    onEventPress?: (event: Event) => void;
    /**
     * Pass to handle creation of a new event by long press on the timeline background
     * NOTE: If passed, the date prop will be included in the returned time string (e.g. 2017-09-06 01:30:00)
     */
    onBackgroundLongPress?: TimelineHoursProps['onBackgroundLongPress'];
    /**
     * Pass to handle creation of a new event by long press out on the timeline background
     * NOTE: If passed, the date prop will be included in the returned time string (e.g. 2017-09-06 01:30:00)
     */
    onBackgroundLongPressOut?: TimelineHoursProps['onBackgroundLongPressOut'];
    styles?: Theme;
    theme?: Theme;
    scrollToFirst?: boolean;
    /**
     * Whether to use 24 hours format for the timeline hours
     */
    format24h?: boolean;
    /**
     * Render a custom event block
     */
    renderEvent?: (event: PackedEvent) => JSX.Element;
    /**
     * Whether to show now indicator
     */
    showNowIndicator?: boolean;
}
declare const Timeline: (props: TimelineProps) => JSX.Element;
export { Event as TimelineEventProps, PackedEvent as TimelinePackedEventProps };
export default Timeline;
